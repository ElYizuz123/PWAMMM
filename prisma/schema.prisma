generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

//  TODO: Modelos en mayusculas
model asociada {
  id_asociada Int     @id @default(autoincrement())
  nombre      String  @db.VarChar(45)
  historia    String
  foto        String  @db.VarChar(45)
  marca       marca[]
}

model evento {
  id_evento   Int      @id @default(autoincrement())
  foto        String?  @db.VarChar(45)
  nombre      String   @db.VarChar(45)
  descripcion String   @db.VarChar(100)
  fecha_fin   DateTime @db.Timestamp(6)
}

model marca {
  id_marca             Int        @id @default(autoincrement())
  nombre               String     @unique(map: "nombre_UNIQUE") @db.VarChar(45)
  Asociada_id_asociada Int
  tipo                 Int
  asociada             asociada   @relation(fields: [Asociada_id_asociada], references: [id_asociada], onDelete: Cascade, onUpdate: NoAction, map: "fk_marca_Asociada1")
  producto             producto[]

  @@index([Asociada_id_asociada], map: "fk_marca_Asociada1_idx")
}

model botella {
  id_botella       Int      @id @default(autoincrement())
  tipo_agave       String
  cantidad_alcohol Int
  ml               Int
  id_producto      Int
  producto         producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, onUpdate: NoAction, map: "fk_botella_producto1")

  @@index([id_producto], map: "fk_botella_producto_idx")
}

model producto {
  id_producto      Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(45)
  precio           Decimal            @db.Decimal(10, 2)
  descripcion      String
  foto             String             @db.VarChar(45)
  marca_id_marca   Int
  mercadoLibre     String?
  cantidad         Int?
  marca            marca              @relation(fields: [marca_id_marca], references: [id_marca], onDelete: Cascade, onUpdate: NoAction, map: "fk_producto_marca1")
  venta_individual venta_individual[]
  botella          botella[]
  acompanamiento   acompanamiento[]

  @@index([marca_id_marca], map: "fk_producto_marca1_idx")
}

model acompanamiento {
  id_acompanamiento Int      @id @default(autoincrement())
  gr                String
  id_producto       Int
  producto          producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade, onUpdate: NoAction, map: "fk_acompanamiento_producto1")

  @@index([id_producto], map: "fk_acompanamiento_producto1_idx")
}

model user {
  user     String @id @db.VarChar(45)
  password String
}

model venta_individual {
  id_venta_individual  Int         @id @default(autoincrement())
  cantidad_producto    Int
  subtotal             Decimal     @db.Decimal(10, 2)
  venta_total_id_venta Int
  producto_id_producto Int?
  producto             producto?   @relation(fields: [producto_id_producto], references: [id_producto], onUpdate: NoAction, map: "fk_venta_individual_producto1")
  venta_total          venta_total @relation(fields: [venta_total_id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction, map: "fk_venta_individual_venta_total")

  @@index([producto_id_producto], map: "fk_venta_individual_producto1_idx")
  @@index([venta_total_id_venta], map: "fk_venta_individual_venta_total_idx")
}

model venta_total {
  id_venta             Int                @id @default(autoincrement())
  fecha_venta          DateTime           @default(now())
  total                Decimal            @db.Decimal(10, 2)
  status               String             @default("Pendiente") @db.VarChar(45)
  envio                Int
  nombre_cliente       String
  apellidos_cliente    String
  empresa              String?
  telefono             String
  email                String
  cp                   String
  calle                String
  num_ext              String
  num_int              String?
  colonia              String
  poblacion            String
  region               String
  iv_nombre_cliente    String
  iv_apellidos_cliente String
  iv_telefono          String
  iv_email             String
  iv_cp                String
  iv_calle             String
  iv_num_ext           String
  iv_num_int           String?
  iv_colonia           String
  iv_poblacion         String
  iv_region            String
  venta_individual     venta_individual[]
}

model galeria_foto {
  id_foto Int    @id(map: "galeria_foto_pk") @default(autoincrement())
  foto    String @db.VarChar(45)
}

model pregunta_frecuente {
  id_pregunta_frencuente Int    @id @default(autoincrement())
  pregunta               String
  respuesta              String
}

model ubicacion {
  id_ubicacion Int    @id @default(autoincrement())
  json_marca   String
}
